service: sqsl # keep name < 6 chars !!!

frameworkVersion: '2'

plugins:
  - serverless-localstack

custom:
  localstack:
    stages:
      # list of stages for which the plugin should be enabled
      - local
    host: http://localhost  # optional - LocalStack host to connect to
    edgePort: 4566  # optional - LocalStack edge port to connect to
    autostart: true  # optional - Start LocalStack in Docker on Serverless deploy
    endpointFile: endpoints.json
    debug: true
#    lambda:
#      # Enable this flag to improve performance
#      mountCode: True
#    docker:
#      # Enable this flag to run "docker ..." commands as sudo
#      sudo: False
#  stages:
#    local:

provider:
  name: aws
  runtime: nodejs12.x
  region: eu-west-1
#  lambdaHashingVersion: '20201221'
  stage: local
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - sqs:SendMessage
          Resource:
            - Fn::GetAtt: [ WorkerQueue, Arn ]

functions:
  producer:
    handler: handler.producer
    events:
      - http:
          method: post
          path: produce
    environment:
      QUEUE_URL:
        Ref: WorkerQueue

  consumer:
    handler: handler.consumer
    events:
      - sqs:
          batchSize: 1
          arn:
            Fn::GetAtt:
              - WorkerQueue
              - Arn

resources:
  Resources:
    WorkerQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: workerQueue-${self:provider.stage}
        RedrivePolicy:
          deadLetterTargetArn:
            Fn::GetAtt:
              - WorkerDLQ
              - Arn
          maxReceiveCount: 5
    WorkerDLQ:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: workerDlq-${self:provider.stage}
